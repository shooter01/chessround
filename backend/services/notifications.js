const axios = require('axios');

const nodemailer = require('nodemailer');
const db = require('../db');

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
 */
async function sendTelegramMessage({ botToken, chatId, text }) {
  const url = `https://api.telegram.org/bot${botToken}/sendMessage`;

  console.log(`üõ†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram API: ${url}`);
  console.log(`üì© –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: chat_id=${chatId}, text=${text}`);

  if (!botToken) {
    const errorMsg = '‚ùå –û—à–∏–±–∫–∞: botToken –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω!';
    console.error(errorMsg);
    return errorMsg;
  }

  if (!chatId) {
    const errorMsg = '‚ùå –û—à–∏–±–∫–∞: chatId –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω!';
    console.error(errorMsg);
    return errorMsg;
  }

  try {
    const response = await axios.post(url, { chat_id: chatId, text });
    console.log(`‚úÖ Telegram message sent to ${chatId}`);
    return null; // —É—Å–ø–µ—Ö ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
  } catch (error) {
    // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ:
    const status = error?.response?.status;
    const data = error?.response?.data;
    const statusText = error?.response?.statusText;

    // –ú–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –∫–∞–∫ –µ–¥–∏–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –∫–∞–∫ JSON
    const errorMsg = `
‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:
  URL: ${url}
  –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: chat_id=${chatId}, text=${text}
  StatusCode: ${status || '–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ'}
  StatusText: ${statusText || '–ù–µ—Ç —Å—Ç–∞—Ç—É—Å–∞'}
  Response data: ${JSON.stringify(data) || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}
  Error message: ${error.message}
  Stack: ${error.stack}
    `.trim();

    console.error(errorMsg);
    return errorMsg;
  }
}
async function sendEmailFromDB(userId, to, subject, text) {
  let host, port, user;

  try {
    const integrationResult = await db.query(
      'SELECT host, port, "user", "password" FROM integrations WHERE user_id = $1 AND channel = $2 LIMIT 1',
      [userId, 'email']
    );

    if (integrationResult.rows.length === 0) {
      const errorMsg = `‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã SMTP-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`;
      console.error(errorMsg);
      return errorMsg;
    }

    ({ host, port, user, password } = integrationResult.rows[0]);

    console.log(
      `üì© –ò—Å–ø–æ–ª—å–∑—É–µ–º SMTP: host=${host}, port=${port}, user=${user}`
    );

    const transporter = nodemailer.createTransport({
      host,
      port: Number(port),
      secure: Number(port) === 465,
      auth: {
        user,
        pass: password,
      },
    });

    const mailOptions = {
      from: 'shooter@mail.ru',
      to,
      subject,
      text,
    };

    const info = await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email sent: ${info.messageId}`);
    return null;
  } catch (error) {
    const errorMsg = `
‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:
  HOST: ${host || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
  PORT: ${port || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
  USER: ${user || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
  Subject: ${subject}
  To: ${to}
  Error message: ${error.message}
  Stack: ${error.stack}
    `.trim();

    console.error(errorMsg);
    return errorMsg;
  }
}

module.exports = {
  sendTelegramMessage,
  sendEmailFromDB,
};
